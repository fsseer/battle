# Nginx reverse proxy for Gladiator (WS + HTTP)

server {
  listen 80;
  server_name api.example.com web.example.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name api.example.com;

  ssl_certificate /etc/letsencrypt/live/api.example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.example.com/privkey.pem;

  client_max_body_size 2m;
  gzip off;

  # Socket.IO (WebSocket/polling)
  location /socket.io/ {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 60s;
    proxy_send_timeout 60s;

    proxy_pass http://127.0.0.1:5174;
  }

  # API
  location / {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 30s;
    proxy_send_timeout 30s;
    proxy_pass http://127.0.0.1:5174;
  }
}

server {
  listen 443 ssl http2;
  server_name web.example.com;

  ssl_certificate /etc/letsencrypt/live/web.example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/web.example.com/privkey.pem;

  # Option 1: serve built static files
  root /var/www/battle-web/dist;
  index index.html;
  location / {
    try_files $uri /index.html;
  }

  # Option 2: proxy to Vite preview (for temporary external review)
  # location / {
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  #   proxy_pass http://127.0.0.1:5173;
  # }
}


